{
  "name": "FukuML",
  "tagline": "Simple machine learning library / 簡單易用的機器學習套件",
  "body": "FukuML\r\n=========\r\n\r\nSimple machine learning library / 簡單易用的機器學習套件\r\n\r\nInstallation\r\n============\r\n\r\n    $ pip install FukuML\r\n\r\nAlgorithm\r\n============\r\n\r\n- Perceptron\r\n    - Perceptron Binary Classification Learning Algorithm\r\n    - Perceptron Multi Classification Learning Algorithm\r\n    - Pocket Perceptron Binary Classification Learning Algorithm\r\n    - Pocket Perceptron Multi Classification Learning Algorithm\r\n- Regression\r\n    - Linear Regression Learning Algorithm\r\n    - Linear Regression Binary Classification Learning Algorithm\r\n    - Linear Regression Multi Classification Learning Algorithm\r\n    - Ridge Regression Learning Algorithm\r\n    - Ridge Regression Binary Classification Learning Algorithm\r\n    - Ridge Regression Multi Classification Learning Algorithm\r\n    - Kernel Ridge Regression Learning Algorithm\r\n    - Kernel Ridge Regression Binary Classification Learning Algorithm\r\n    - Kernel Ridge Regression Multi Classification Learning Algorithm\r\n- Logistic Regression\r\n    - Logistic Regression Learning Algorithm\r\n    - Logistic Regression Binary Classification Learning Algorithm\r\n    - Logistic Regression One vs All Multi Classification Learning Algorithm\r\n    - Logistic Regression One vs One Multi Classification Learning Algorithm\r\n    - L2 Regularized Logistic Regression Learning Algorithm\r\n    - L2 Regularized Logistic Regression Binary Classification Learning Algorithm\r\n    - Kernel Logistic Regression Learning Algorithm\r\n- Support Vector Machine\r\n    - Primal Hard Margin Support Vector Machine Binary Classification Learning Algorithm\r\n    - Dual Hard Margin Support Vector Machine Binary Classification Learning Algorithm\r\n    - Polynomial Kernel Support Vector Machine Binary Classification Learning Algorithm\r\n    - Gaussian Kernel Support Vector Machine Binary Classification Learning Algorithm\r\n    - Soft Polynomial Kernel Support Vector Machine Binary Classification Learning Algorithm\r\n    - Soft Gaussian Kernel Support Vector Machine Binary Classification Learning Algorithm\r\n    - Polynomial Kernel Support Vector Machine Multi Classification Learning Algorithm\r\n    - Gaussian Kernel Support Vector Machine Multi Classification Learning Algorithm\r\n    - Soft Polynomial Kernel Support Vector Machine Multi Classification Learning Algorithm\r\n    - Soft Gaussian Kernel Support Vector Machine Multi Classification Learning Algorithm\r\n    - Probabilistic Support Vector Machine Learning Algorithm\r\n    - Least Squares Support Vector Machine Binary Classification Learning Algorithm\r\n    - Least Squares Support Vector Machine Multi Classification Learning Algorithm\r\n    - Support Vector Regression Learning Algorithm\r\n- Decision Tree\r\n    - Decision Stump Binary Classification Learning Algorithm\r\n    - AdaBoost Stump Binary Classification Learning Algorithm\r\n    - Decision Tree Classification Learning Algorithm\r\n    - Decision Tree Regression Learning Algorithm\r\n- Neural Network\r\n    - Neural Network Learning Algorithm\r\n    - Neural Network Binary Classification Learning Algorithm\r\n- Accelerator\r\n    - Linear Regression Accelerator\r\n- Feature Transform\r\n    - Polynomial Feature Transform\r\n    - Legendre Feature Transform\r\n- Validation\r\n    - 10 Fold Cross Validation\r\n- Blending\r\n    - Uniform Blending for Classification\r\n    - Linear Blending for Classification\r\n    - Uniform Blending for Regression\r\n    - Linear Blending for Regression\r\n\r\nUsage\r\n============\r\n\r\n    >>> import numpy as np\r\n    # we need numpy as a base libray\r\n\r\n    >>> import FukuML.PLA as pla\r\n    # import FukuML.PLA to do Perceptron Learning\r\n\r\n    >>> your_input_data_file = '/path/to/your/data/file'\r\n    # assign your input data file, please check the data format: https://github.com/fukuball/fuku-ml/blob/master/FukuML/dataset/pla_binary_train.dat\r\n\r\n    >>> pla_bc = pla.BinaryClassifier()\r\n    # new a PLA binary classifier\r\n\r\n    >>> pla_bc.load_train_data(your_input_data_file)\r\n    # load train data\r\n\r\n    >>> pla_bc.set_param()\r\n    # set parameter\r\n\r\n    >>> pla_bc.init_W()\r\n    # init the W\r\n\r\n    >>> W = pla_bc.train()\r\n    # train by Perceptron Learning Algorithm to find best W\r\n\r\n    >>> test_data = 'Each feature of data x separated with spaces. And the ground truth y put in the end of line separated by a space'\r\n    # assign test data, format like this '0.97681 0.10723 0.64385 ........ 0.29556 1'\r\n\r\n    >>> prediction = pla_bc.prediction(test_data)\r\n    # prediction by trained W\r\n\r\n    >>> print prediction['input_data_x']\r\n    # print test data x\r\n\r\n    >>> print prediction['input_data_y']\r\n    # print test data y\r\n\r\n    >>> print prediction['prediction']\r\n    # print the prediction, will find out prediction is the same as pla_bc.test_data_y\r\n\r\nFor detail, please check https://github.com/fukuball/fuku-ml/blob/master/doc/sample_code.rst\r\n\r\nTests\r\n=========\r\n\r\n   python test_fuku_ml.py\r\n\r\nPEP8\r\n=========\r\n\r\n   pep8 FukuML/*.py --ignore=E501\r\n\r\nLicense\r\n=========\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 fukuball\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}